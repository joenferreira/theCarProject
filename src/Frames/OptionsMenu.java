/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import classes.User;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import run.Sqlite;

/**
 *
 * @author Joen
 */
public class OptionsMenu extends javax.swing.JFrame {

    static JFrame FRAME2;
    String color = "";
    classes.User newUser = new User("", 0);

    /**
     * Creates new form OptionsMenu
     * @param newUserIn
     */
    public OptionsMenu(classes.User newUserIn) {
        newUser = newUserIn;
        initComponents();
        doOnStart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jRadioGrey = new javax.swing.JRadioButton();
        jRadioBlue = new javax.swing.JRadioButton();
        jRadioRed = new javax.swing.JRadioButton();
        applyButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(143, 166, 190));
        setLocation(new java.awt.Point(500, 200));
        setPreferredSize(new java.awt.Dimension(724, 463));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(95, 166, 190));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Background Color");

        jRadioGrey.setBackground(new java.awt.Color(95, 166, 190));
        buttonGroup1.add(jRadioGrey);
        jRadioGrey.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioGrey.setText("Grey");
        jRadioGrey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioGreyActionPerformed(evt);
            }
        });

        jRadioBlue.setBackground(new java.awt.Color(95, 166, 190));
        buttonGroup1.add(jRadioBlue);
        jRadioBlue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioBlue.setText("Blue");
        jRadioBlue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioBlueActionPerformed(evt);
            }
        });

        jRadioRed.setBackground(new java.awt.Color(95, 166, 190));
        buttonGroup1.add(jRadioRed);
        jRadioRed.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioRed.setText("Red");
        jRadioRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioRedActionPerformed(evt);
            }
        });

        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(227, 227, 227))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jRadioBlue)
                .addGap(92, 92, 92)
                .addComponent(jRadioGrey)
                .addGap(96, 96, 96)
                .addComponent(jRadioRed)
                .addGap(0, 197, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(302, 302, 302)
                .addComponent(applyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioGrey)
                    .addComponent(jRadioBlue)
                    .addComponent(jRadioRed))
                .addGap(38, 38, 38)
                .addComponent(applyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(213, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 204));

        jMenu1.setText("System");

        jMenuItem1.setBackground(new java.awt.Color(204, 204, 204));
        jMenuItem1.setText("Main Menu");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioBlueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioBlueActionPerformed
        blueBackground();
    }//GEN-LAST:event_jRadioBlueActionPerformed

    private void jRadioGreyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioGreyActionPerformed
        greyBackground();
    }//GEN-LAST:event_jRadioGreyActionPerformed

    private void jRadioRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioRedActionPerformed
        redBackground();
    }//GEN-LAST:event_jRadioRedActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        if (jRadioRed.isSelected()) {
            updateToDatabase("Red");
        } else if (jRadioBlue.isSelected()) {
            updateToDatabase("Blue");
        } else if (jRadioGrey.isSelected()) {
            updateToDatabase("Grey");
        }
        goBackMainMenu();
    }//GEN-LAST:event_applyButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        goBackMainMenu();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OptionsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OptionsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OptionsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OptionsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new OptionsMenu(new User("", 0)).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioBlue;
    private javax.swing.JRadioButton jRadioGrey;
    private javax.swing.JRadioButton jRadioRed;
    // End of variables declaration//GEN-END:variables

    private void doOnStart() {
        Connection conn = null;
        try {
            conn = (new Sqlite().connect());

            String SQL = "Select * from options WHERE user_id =" + newUser.getId();
            try (ResultSet rs = conn.createStatement().executeQuery(SQL)) {
                while (rs.next()) {
                    color = rs.getString(3);
                }
                conn.close();
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(FirstPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        //if not found
        switch (color) {
            case "":
                jRadioBlue.setSelected(true);
                blueBackground();
                addToDatabase("Blue");
                break;
            case "Blue":
                jRadioBlue.setSelected(true);
                blueBackground();
                break;
            case "Grey":
                jRadioGrey.setSelected(true);
                greyBackground();
                break;
            case "Red":
                jRadioRed.setSelected(true);
                redBackground();
                break;
            default:
                break;
        }
    }

    private void addToDatabase(String newColor) {
        Connection conn = null;
        try {
            conn = (new Sqlite().connect());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(newUserFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        String sql = "insert into options(user_id, color) values(?,?)";
        PreparedStatement state = null;
        try {
            state = conn.prepareStatement(sql);
            state.setInt(1, newUser.getId());
            state.setString(2, "Blue");

            state.execute();

            state.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(newUserFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void updateToDatabase(String newColor) {
        Connection conn = null;
        try {
            conn = (new Sqlite().connect());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(newUserFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        String sql = "UPDATE options SET color=? WHERE user_id=" + newUser.getId();
        PreparedStatement state = null;
        try {
            state = conn.prepareStatement(sql);
            state.setString(1, newColor);

            state.execute();

            state.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(newUserFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void blueBackground() {
        jPanel1.setBackground(new Color(95, 166, 190));
        jRadioBlue.setBackground(new Color(95, 166, 190));
        jRadioRed.setBackground(new Color(95, 166, 190));
        jRadioGrey.setBackground(new Color(95, 166, 190));
    }

    void greyBackground() {
        jPanel1.setBackground(Color.gray);
        jRadioGrey.setBackground(Color.GRAY);
        jRadioRed.setBackground(Color.GRAY);
        jRadioBlue.setBackground(Color.GRAY);
    }

    void redBackground() {
        jPanel1.setBackground(Color.RED);
        jRadioRed.setBackground(Color.red);
        jRadioGrey.setBackground(Color.red);
        jRadioBlue.setBackground(Color.red);
    }

    private void goBackMainMenu() {
        FRAME2 = new FirstPage(newUser);
        FRAME2.setVisible(true);
        FirstPage.FRAME2.dispose();
    }
}
